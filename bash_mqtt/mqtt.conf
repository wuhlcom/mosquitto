#!/bin/bash
#auth:wuhongliang
#auth:2016-11-15
#mqtt client config file
#mosquitto client params
####################client pcs#####################
ipPre="192.168.10."
#client pc ip address array
#ip_array=("${ipPre}20" "${ipPre}164")
#ip_array=("${ipPre}164")
ip_array=("")
#client pc root account
rootusr="root"
######################mqtt server#################
srv_ip=192.168.10.8
redisSrvIP=192.168.10.99
#mqtt server port
srv_port=1883
redisPort=6379
########mqtt client keepLive time#############
keepLive=60
##########mqtt client redis "usr" "pw" "index"#################
#设置认证类型,密码认证“pw”，密码+单向证书“singleCa”,密码+双向证书“biCa”
#是否创建用户名和密码
mqttAuth=true
defaultUsr=mqttclient
defaultPasswd=mqttclient
carPath=”/home/zhilu/mosquitto/bash_mqtt/carfile/ca.crt“
keyPath=”/home/zhilu/mosquitto/bash_mqtt/carfile/client.key“
crtPath=”/home/zhilu/mosquitto/bash_mqtt/carfile/client.crt“
defaultIndex=1
remote_dir="/home/zhilu/mosquitto/bash_mqtt"
tcGap=10
##########################################pc interface name
intf=eth0
cIP=`ip a|grep "inet\s*192.168.10.*$intf"|awk -F " " '{print $2}'|sed 's/\/24//g'`
#统一同一脚本的日志时间，这样就不会因为时间问题导致同一日志写入到了不同文件
currentTime=`date "+%Y%m%d%H%M%S"`
########################logs########################
#file size
#监控日志的文件最大值
fileSize=81920
#log file name,must be ""
logFileName=""
#################################how long to record the logs
#监控日志记录间隔
logGap=300
################mosquitto client ips,empty,log all clients 
#clientIP="192.168.10.76\|192.168.10.81"
#用于服务器生成日志时过滤
clientIP=""
######################capture##############################
#是否抓包
capFlag=false
#tcp port filter
filterPort=1883
#cap save Path
capPath="caps/"
#cap save file name
capFile="cap_${intf}_${cIP}.pcapng"
#cap file size MB
capFileSize=2000
#cap file account
capFileNum=50
subCcount=1
#############testcase 1###########################################
#############服务器最大容量测试多台机器每台建立约2.5W会话直到达到最大规格####
#############centerControl.sh subAll######################
#############mqttClient.sh subLoop########################
#订阅者id前缀
subIDPre="mosquittoSubId"
#订阅主题前缀
subTopicPre="mosquittoTopic"
#单台PC订阅数量
subNum=23000
#订阅起始ID序号
sSubNum=1
#订阅结束ID序号
eSubNum=`expr $subNum + $sSubNum - 1`
#订阅过程计数
#mqttClient.sh subLoopNoAcc
subFName="SubNum"
#查询订阅结果间隔:s
querySubGap=5
#查询订阅结果次数
querySubCount=10
subWait=420
#---debug--------
#querySubCount=10
#querySubGap=10
#subWait=5
#############testcase 2####################################
############连接性能测试
############达到最大连接数后，保持5分钟观察会话状态####
##################centerControl.sh  subAllContinue#########
#订阅后,总等待时间
queryTime=300
#订阅后每隔多久观察一次订阅结果
queryGap=60
#############testcase 3###########################################
#########客户端连接/断开性能测试
#########达到最大连接后反复进行连接断开操作，每一次操作连接，断开数要正常
#############单次订阅#############################################
#############centerControl.sh subCcontinue()######################
#############mqttClient.sh subCLoop###############################
#单次订阅ID前缀
subCIDPre="subCID"
#单次订阅固定主题
subCTopic="subCTopic"
#单次PUB固定消息内容
pubCMsg="finishSubCs"
#PUB固定ID
pubCID="pubCID"
#单台PC单次订阅数量
subCNum=23000
#订阅起始ID序号
subCsNum=1
#订阅结束ID序号
subCeNum=`expr $subCNum + $subCsNum - 1`
#订阅过程计数
#mqttClient.sh subCLoopNoAcc
subCFName="SubCNum"
#保存订阅后收到的消息
#mqttClient.sh subCLoopNoAcc
subCRecieved="SubCRecieved"
#反复订阅/断开操作总的等待时间
subCTime=240
#反复订阅/断开操作完成次一次的操作间隔
subCGap=10
#等待订阅
subCWait=300
#---debug------
#subCWait=10
#subCTime=15
#subCGap=5
######################testcase 4#####################################
######客户端百万次订阅/发布性能测试
######进行大量发布订阅/发布测试,如百万级
######这里大量用户订阅相同主题后，再针对这个主题不停的发布消息#####
######以提高单台PC的利用率#############################################
######################mqtt sub fix topic test then pub###############
######n台PC上m个不同会话订阅同一主题
########这样只发布1次，1台机器就完成m次， n台PC--n x m次消息订阅
########n台PC各发布1次，1台机器n x m, n台pc-- n x n x m次消息订阅
########n台PC各发布k次，1台机器n x m x k,n台pc--n x n x k x m次消息订阅
#"订阅-发布"总次数限制
subFixCount=40000
#限定查询次数,暂时取消
subFixQueryMax=100
#单台PC单次订阅数量
subFixNum=10000
#订阅起始ID序号
subFixSNum=1
#订阅结束ID序号
subFixENum=`expr $subFixSNum + $subFixNum - 1`
#发布消息条数
pubFixNum=1000
#发布消息起始ID序号
pubFixSNum=1
#发布消息结束ID序号
pubFixENum=`expr $pubFixSNum + $pubFixNum - 1`
#订阅ID前缀
subFixIDPre="subFixID"
#订阅固定主题
subFixTopic="testSubFixTopic"
#订阅计数
subFixFName="SubFixNum"
#订阅消息统计
subFixRecieved="SubFixRecieved"
#------------------------------
#两种限时操作只能选一个
#限定操作超时时间，小时为单位
# subFixHours=30
# subFixQueryTime=`expr $subFixHours \* 60 \* 60`
#限定操作超时时间，分钟为单位
subFixMinites=120
subFixQueryTime=`expr $subFixMinites \* 60`
subFixWait=150
#--------------------------
#"订阅-发布"间隔
subFixGap=5
#############testcase 5##############################################
############保留消息性能测试
###########发布大量保留消息再去订阅，如百万条保留消息
#############pub retain##############################################
#订阅保留消息ID前缀
subRIDPre="subMsgRetainId"
#发布保留消息ID前缀
pubRIDPre="pubIDRetain"
#保留消息主题前缀
pubRTopicPre="pubTopicRetain"
#保留消息内容前缀
pubRMsgPre="pubMsgRetain"
#单台发布保留消息数量
pubRNum=5000
#保留消息初始序列
pubRsNum=1
#保留消息结束序列
pubReNum=`expr $pubRNum + $pubRsNum - 1`
#保留消息发布计数
pubRFName="PubRNum"
#保留消息订阅计数
subRFName="SubCRNum"
#保存收到保留消息
subCPubRRecieved="SubCPubRRecieved"
pubRWait=900
#发布保留消息后再订阅的间隔时长
#mqttClient.sh subPubRNoAcc
retainGap=5
###############testcase 6########################################
#############长时间稳定性测试
#############订阅，发布，断开反复长期测试，
#############每循环测试一次观察订阅，发布，断开操作是否正常
###############centerControl.sh subCRecontinue###################
###############mqttClient.sh subCReLoop##########################
###############长期订阅取消订阅,反复操作#########################
#订阅ID前缀
subCReIDPre="subCReID"
#发布固定消息
pubCReMsg="finishSubCRes"
#发布ID前缀
pubCReID="pubCReID"
#订阅固定主题
subCReTopic="subCReTopic"
#单台机器订阅数量
subCReNum=20000
#订阅起始ID序号
subCResNum=20001
#订阅结束ID序号
subCReeNum=`expr $subCReNum + $subCResNum - 1`
#订阅计数
subCReFName="SubCReNum"
#保存订阅到的消息
subCReRecieved="SubCReRecieved"
#反复"订阅-发布-断开"多久
subCHours=66
subCReTime=`expr $subCHours \* 60 \* 60`
#subCMinitues=1
#subCReTime=`expr $subCHours \* 60`
#"订阅-发布-断开"操作间隔，完成一次订阅查询-->取消订阅的间隔
subCReGap=60
subCReWait=60
##################testcase 7####################################
###################singCa###########################
#主题前缀
subSiTopicPre=subSingle
#ID前缀
subSiIDPre=subSingleID
subSiRecieved="SubSiRecieved"
subSiFName="subSiNum"
#订阅数量
subSiNum=2
subSiSNum=1
subSiENum=`expr $subSiENum + $subSiNum - 1`
#订阅等待
subSiWait=10
#设置订阅后查询总时长,minutes
subSiQuery=30 
subSiQueryTime=`expr 60 \* $sbuSiquery`
subSiGap=`expr 60 \* 5`
#####################mqttClient.sh subPub#####################
#####################mqtt sub pub test########################
subPubTopic=mqtttopic
#订阅消息数
pubSubNum=2
pubSubSNum=1
pubSubENum=`expr $pubSubNum + $pubSubSNum - 1`
#发布消息数
subPubNum=2
subPubSNum=1
subPubENum=`expr $subPubNum + $subPubSNum - 1`
#单台设备发布和订阅数
sub_pub_num=`expr $pubSubNum \* $subPubNum`
#保存收到的订阅消息
subPubRecieved="SubPubRecieved"
#批量订阅后，等待多久后再进行发布的时间间隔,订阅数较多时要修改此值,
#用在mqttClient.sh
subPubGap=30
clientGap=10
#####################mqttClient.sh pubLoop#######################
##########################mqtt_pub###############################
pubTopicPre="mosquittoTopic"
pubMsgPre="mosquittoMSG"
pubIDPre="mosquittoPubId"
sPubNum=1
ePubNum=1
pubQos=0
